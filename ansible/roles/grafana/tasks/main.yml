---
# tasks file for grafana
- name: Ensure group grafana exists
  ansible.builtin.group:
    name: grafana
    state: present
- name: Add grafana user
  ansible.builtin.user:
    name: grafana
    group: grafana
    system: true
    state: "present"
    create_home: false
- name: Create Grafana /var/lib
  ansible.builtin.file:
    path: /var/lib/grafana/
    state: directory
    mode: '0755'
    owner: grafana
    group: grafana
- name: Getting the grafana tar
  ansible.builtin.get_url:
    url: "{{ grafana_url }}"
    dest: "{{ grafana_tmp }}"
    checksum: "{{ grafana_checksum }}"
    mode: '0644'
- name: Find file
  ansible.builtin.command:
    cmd: "find {{ grafana_tmp }} -type f -name grafana*.tar.gz"
  register: tar_file
- name: Unarchive grafana tar
  ansible.builtin.unarchive:
    remote_src: true
    src: "{{ tar_file.stdout }}"
    dest: "{{ grafana_tmp }}"
    owner: grafana
    group: grafana
- name: Find directory
  ansible.builtin.command:
    cmd: "find {{ grafana_tmp }} -type d -name grafana-v*"
  register: grafana_dir
- name: Copying files
  ansible.builtin.copy:
    remote_src: true
    src: "{{ grafana_dir.stdout }}/"
    dest: /var/lib/grafana/
    owner: grafana
    group: grafana
    mode: '0755'
- name: Copying files
  ansible.builtin.copy:
    remote_src: false
    src: "{{ role_path }}/files/grafana-server.service"
    dest: /etc/systemd/system/
    owner: root
    group: root
    mode: '0644'
- name: Check grafana is running
  ansible.builtin.systemd:
    daemon_reload: true
    name: grafana-server.service
    state: started
    enabled: true
- name: Deleting downloaded files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items: 
    - dir: "{{ grafana_dir.stdout }}"
    - file: "{{ tar_file.stdout }}"
